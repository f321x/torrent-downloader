name: React Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./torrent-downloader-react

    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './torrent-downloader-react/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build package
      run: npm run build
      
    - name: Verify built assets
      run: |
        if [ ! -f "dist/assets/index-*.js" ] || [ ! -f "dist/assets/index-*.css" ]; then
          echo "ERROR: Frontend assets not built correctly!"
          exit 1
        fi
        echo "Frontend assets verified successfully!"
    
    - name: Copy assets to Python package
      run: |
        mkdir -p backend/torrent_downloader/static
        cp -r dist/* backend/torrent_downloader/static/

  backend-tests:
    name: Backend Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    defaults:
      run:
        working-directory: ./torrent-downloader-react/backend

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: './torrent-downloader-react/backend/requirements.txt'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libtorrent-rasterbar-dev
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools pytest httpx
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest 